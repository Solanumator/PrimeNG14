"use strict";(self.webpackChunkprimeng=self.webpackChunkprimeng||[]).push([[5430],{7808:(v,C,c)=>{c.d(C,{EV:()=>t.EV});var t=c(9064)},9064:(v,C,c)=>{c.d(C,{EV:()=>S,FN:()=>q});var t=c(1571),p=c(6895),n=c(8476),m=c(9716),Z=c(3421),h=c(7340),u=c(4174);const g=["container"],f=function(s,b,e,o){return{"pi-info-circle":s,"pi-exclamation-triangle":b,"pi-times-circle":e,"pi-check":o}};function A(s,b){if(1&s&&(t.ynx(0),t._UZ(1,"span",6),t.TgZ(2,"div",7)(3,"div",8),t._uU(4),t.qZA(),t.TgZ(5,"div",9),t._uU(6),t.qZA()(),t.BQk()),2&s){const e=t.oxw();t.xp6(1),t.Tol("p-toast-message-icon pi"+(e.message.icon?" "+e.message.icon:"")),t.Q6J("ngClass",t.l5B(5,f,"info"==e.message.severity,"warn"==e.message.severity,"error"==e.message.severity,"success"==e.message.severity)),t.xp6(3),t.Oqu(e.message.summary),t.xp6(2),t.Oqu(e.message.detail)}}function T(s,b){1&s&&t.GkF(0)}function k(s,b){if(1&s){const e=t.EpF();t.TgZ(0,"button",10),t.NdJ("click",function(r){t.CHM(e);const y=t.oxw();return t.KtG(y.onCloseIconClick(r))})("keydown.enter",function(r){t.CHM(e);const y=t.oxw();return t.KtG(y.onCloseIconClick(r))}),t._UZ(1,"span",11),t.qZA()}}const O=function(s){return[s,"p-toast-message"]},x=function(s,b,e,o){return{showTransformParams:s,hideTransformParams:b,showTransitionParams:e,hideTransitionParams:o}},_=function(s){return{value:"visible",params:s}},D=function(s){return{$implicit:s}};function U(s,b){if(1&s){const e=t.EpF();t.TgZ(0,"p-toastItem",3),t.NdJ("onClose",function(r){t.CHM(e);const y=t.oxw();return t.KtG(y.onMessageClose(r))})("@toastAnimation.start",function(r){t.CHM(e);const y=t.oxw();return t.KtG(y.onAnimationStart(r))})("@toastAnimation.done",function(r){t.CHM(e);const y=t.oxw();return t.KtG(y.onAnimationEnd(r))}),t.qZA()}if(2&s){const e=b.$implicit,o=b.index,r=t.oxw();t.Q6J("message",e)("index",o)("template",r.template)("@toastAnimation",void 0)("showTransformOptions",r.showTransformOptions)("hideTransformOptions",r.hideTransformOptions)("showTransitionOptions",r.showTransitionOptions)("hideTransitionOptions",r.hideTransitionOptions)}}let w=(()=>{class s{constructor(e){this.zone=e,this.onClose=new t.vpe}ngAfterViewInit(){this.initTimeout()}initTimeout(){this.message.sticky||this.zone.runOutsideAngular(()=>{this.timeout=setTimeout(()=>{this.onClose.emit({index:this.index,message:this.message})},this.message.life||3e3)})}clearTimeout(){this.timeout&&(clearTimeout(this.timeout),this.timeout=null)}onMouseEnter(){this.clearTimeout()}onMouseLeave(){this.initTimeout()}onCloseIconClick(e){this.clearTimeout(),this.onClose.emit({index:this.index,message:this.message}),e.preventDefault()}ngOnDestroy(){this.clearTimeout()}}return s.\u0275fac=function(e){return new(e||s)(t.Y36(t.R0b))},s.\u0275cmp=t.Xpm({type:s,selectors:[["p-toastItem"]],viewQuery:function(e,o){if(1&e&&t.Gf(g,5),2&e){let r;t.iGM(r=t.CRH())&&(o.containerViewChild=r.first)}},hostAttrs:[1,"p-element"],inputs:{message:"message",index:"index",template:"template",showTransformOptions:"showTransformOptions",hideTransformOptions:"hideTransformOptions",showTransitionOptions:"showTransitionOptions",hideTransitionOptions:"hideTransitionOptions"},outputs:{onClose:"onClose"},decls:6,vars:21,consts:[[3,"ngClass","mouseenter","mouseleave"],["container",""],["role","alert","aria-live","assertive","aria-atomic","true",1,"p-toast-message-content",3,"ngClass"],[4,"ngIf"],[4,"ngTemplateOutlet","ngTemplateOutletContext"],["type","button","class","p-toast-icon-close p-link","pRipple","",3,"click","keydown.enter",4,"ngIf"],[3,"ngClass"],[1,"p-toast-message-text"],[1,"p-toast-summary"],[1,"p-toast-detail"],["type","button","pRipple","",1,"p-toast-icon-close","p-link",3,"click","keydown.enter"],[1,"p-toast-icon-close-icon","pi","pi-times"]],template:function(e,o){1&e&&(t.TgZ(0,"div",0,1),t.NdJ("mouseenter",function(){return o.onMouseEnter()})("mouseleave",function(){return o.onMouseLeave()}),t.TgZ(2,"div",2),t.YNc(3,A,7,10,"ng-container",3),t.YNc(4,T,1,0,"ng-container",4),t.YNc(5,k,2,0,"button",5),t.qZA()()),2&e&&(t.Tol(o.message.styleClass),t.Q6J("ngClass",t.VKq(10,O,"p-toast-message-"+o.message.severity))("@messageState",t.VKq(17,_,t.l5B(12,x,o.showTransformOptions,o.hideTransformOptions,o.showTransitionOptions,o.hideTransitionOptions))),t.uIk("id",o.message.id),t.xp6(2),t.Q6J("ngClass",o.message.contentStyleClass),t.xp6(1),t.Q6J("ngIf",!o.template),t.xp6(1),t.Q6J("ngTemplateOutlet",o.template)("ngTemplateOutletContext",t.VKq(19,D,o.message)),t.xp6(1),t.Q6J("ngIf",!1!==o.message.closable))},dependencies:[p.mk,p.O5,p.tP,u.H],encapsulation:2,data:{animation:[(0,h.X$)("messageState",[(0,h.SB)("visible",(0,h.oB)({transform:"translateY(0)",opacity:1})),(0,h.eR)("void => *",[(0,h.oB)({transform:"{{showTransformParams}}",opacity:0}),(0,h.jt)("{{showTransitionParams}}")]),(0,h.eR)("* => void",[(0,h.jt)("{{hideTransitionParams}}",(0,h.oB)({height:0,opacity:0,transform:"{{hideTransformParams}}"}))])])]},changeDetection:0}),s})(),q=(()=>{class s{constructor(e,o,r){this.messageService=e,this.cd=o,this.config=r,this.autoZIndex=!0,this.baseZIndex=0,this.position="top-right",this.preventOpenDuplicates=!1,this.preventDuplicates=!1,this.showTransformOptions="translateY(100%)",this.hideTransformOptions="translateY(-100%)",this.showTransitionOptions="300ms ease-out",this.hideTransitionOptions="250ms ease-in",this.onClose=new t.vpe,this.id=(0,m.Th)()}ngOnInit(){this.messageSubscription=this.messageService.messageObserver.subscribe(e=>{if(e)if(e instanceof Array){const o=e.filter(r=>this.canAdd(r));this.add(o)}else this.canAdd(e)&&this.add([e])}),this.clearSubscription=this.messageService.clearObserver.subscribe(e=>{e?this.key===e&&(this.messages=null):this.messages=null,this.cd.markForCheck()})}ngAfterViewInit(){this.breakpoints&&this.createStyle()}add(e){this.messages=this.messages?[...this.messages,...e]:[...e],this.preventDuplicates&&(this.messagesArchieve=this.messagesArchieve?[...this.messagesArchieve,...e]:[...e]),this.cd.markForCheck()}canAdd(e){let o=this.key===e.key;return o&&this.preventOpenDuplicates&&(o=!this.containsMessage(this.messages,e)),o&&this.preventDuplicates&&(o=!this.containsMessage(this.messagesArchieve,e)),o}containsMessage(e,o){return!!e&&null!=e.find(r=>r.summary===o.summary&&r.detail==o.detail&&r.severity===o.severity)}ngAfterContentInit(){this.templates.forEach(e=>{e.getType(),this.template=e.template})}onMessageClose(e){this.messages.splice(e.index,1),this.onClose.emit({message:e.message}),this.cd.detectChanges()}onAnimationStart(e){"void"===e.fromState&&(this.containerViewChild.nativeElement.setAttribute(this.id,""),this.autoZIndex&&""===this.containerViewChild.nativeElement.style.zIndex&&m.P9.set("modal",this.containerViewChild.nativeElement,this.baseZIndex||this.config.zIndex.modal))}onAnimationEnd(e){"void"===e.toState&&this.autoZIndex&&m.gb.isEmpty(this.messages)&&m.P9.clear(this.containerViewChild.nativeElement)}createStyle(){if(!this.styleElement){this.styleElement=document.createElement("style"),this.styleElement.type="text/css",document.head.appendChild(this.styleElement);let e="";for(let o in this.breakpoints){let r="";for(let y in this.breakpoints[o])r+=y+":"+this.breakpoints[o][y]+" !important;";e+=`\n                    @media screen and (max-width: ${o}) {\n                        .p-toast[${this.id}] {\n                           ${r}\n                        }\n                    }\n                `}this.styleElement.innerHTML=e}}destroyStyle(){this.styleElement&&(document.head.removeChild(this.styleElement),this.styleElement=null)}ngOnDestroy(){this.messageSubscription&&this.messageSubscription.unsubscribe(),this.containerViewChild&&this.autoZIndex&&m.P9.clear(this.containerViewChild.nativeElement),this.clearSubscription&&this.clearSubscription.unsubscribe(),this.destroyStyle()}}return s.\u0275fac=function(e){return new(e||s)(t.Y36(n.ez),t.Y36(t.sBO),t.Y36(n.b4))},s.\u0275cmp=t.Xpm({type:s,selectors:[["p-toast"]],contentQueries:function(e,o,r){if(1&e&&t.Suo(r,n.jx,4),2&e){let y;t.iGM(y=t.CRH())&&(o.templates=y)}},viewQuery:function(e,o){if(1&e&&t.Gf(g,5),2&e){let r;t.iGM(r=t.CRH())&&(o.containerViewChild=r.first)}},hostAttrs:[1,"p-element"],inputs:{key:"key",autoZIndex:"autoZIndex",baseZIndex:"baseZIndex",style:"style",styleClass:"styleClass",position:"position",preventOpenDuplicates:"preventOpenDuplicates",preventDuplicates:"preventDuplicates",showTransformOptions:"showTransformOptions",hideTransformOptions:"hideTransformOptions",showTransitionOptions:"showTransitionOptions",hideTransitionOptions:"hideTransitionOptions",breakpoints:"breakpoints"},outputs:{onClose:"onClose"},decls:3,vars:5,consts:[[3,"ngClass","ngStyle"],["container",""],[3,"message","index","template","showTransformOptions","hideTransformOptions","showTransitionOptions","hideTransitionOptions","onClose",4,"ngFor","ngForOf"],[3,"message","index","template","showTransformOptions","hideTransformOptions","showTransitionOptions","hideTransitionOptions","onClose"]],template:function(e,o){1&e&&(t.TgZ(0,"div",0,1),t.YNc(2,U,1,8,"p-toastItem",2),t.qZA()),2&e&&(t.Tol(o.styleClass),t.Q6J("ngClass","p-toast p-component p-toast-"+o.position)("ngStyle",o.style),t.xp6(2),t.Q6J("ngForOf",o.messages))},dependencies:[p.mk,p.sg,p.PC,w],styles:[".p-toast{position:fixed;width:25rem}.p-toast-message{overflow:hidden}.p-toast-message-content{display:flex;align-items:flex-start}.p-toast-message-text{flex:1 1 auto}.p-toast-top-right{top:20px;right:20px}.p-toast-top-left{top:20px;left:20px}.p-toast-bottom-left{bottom:20px;left:20px}.p-toast-bottom-right{bottom:20px;right:20px}.p-toast-top-center{top:20px;left:50%;transform:translate(-50%)}.p-toast-bottom-center{bottom:20px;left:50%;transform:translate(-50%)}.p-toast-center{left:50%;top:50%;min-width:20vw;transform:translate(-50%,-50%)}.p-toast-icon-close{display:flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-toast-icon-close.p-link{cursor:pointer}\n"],encapsulation:2,data:{animation:[(0,h.X$)("toastAnimation",[(0,h.eR)(":enter, :leave",[(0,h.IO)("@*",(0,h.pV)())])])]},changeDetection:0}),s})(),S=(()=>{class s{}return s.\u0275fac=function(e){return new(e||s)},s.\u0275mod=t.oAB({type:s}),s.\u0275inj=t.cJS({imports:[p.ez,Z.T,n.m8]}),s})()},7381:(v,C,c)=>{c.d(C,{a:()=>h,h:()=>Z});var t=c(6895),p=c(1571);const n=["code"],m=["*"];let Z=(()=>{class u{constructor(f){this.el=f,this.lang="markup"}ngAfterViewInit(){window.Prism&&window.Prism.highlightElement(this.codeViewChild.nativeElement)}}return u.\u0275fac=function(f){return new(f||u)(p.Y36(p.SBq))},u.\u0275cmp=p.Xpm({type:u,selectors:[["app-code"]],viewQuery:function(f,A){if(1&f&&p.Gf(n,5),2&f){let T;p.iGM(T=p.CRH())&&(A.codeViewChild=T.first)}},inputs:{lang:"lang",style:"style",styleClass:"styleClass"},ngContentSelectors:m,decls:5,vars:5,consts:[[3,"ngClass"],["code",""]],template:function(f,A){1&f&&(p.F$t(),p.TgZ(0,"pre",0)(1,"code",null,1),p.Hsn(3),p._uU(4,"\n"),p.qZA()()),2&f&&(p.Akn(A.style),p.Tol(A.styleClass),p.Q6J("ngClass","language-"+A.lang))},dependencies:[t.mk],encapsulation:2}),u})(),h=(()=>{class u{}return u.\u0275fac=function(f){return new(f||u)},u.\u0275mod=p.oAB({type:u}),u.\u0275inj=p.cJS({imports:[t.ez]}),u})()},5430:(v,C,c)=>{c.r(C),c.d(C,{ChartDemoModule:()=>y});var t=c(6895),p=c(9859),n=c(1571),m=c(7381);let Z=(()=>{class a{}return a.\u0275fac=function(i){return new(i||a)},a.\u0275cmp=n.Xpm({type:a,selectors:[["ng-component"]],decls:193,vars:0,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["href","http://www.chartjs.org/",2,"color","#68d4f9"],[1,"content-section","documentation"],[2,"margin-top","0px"],["lang","markup"],["lang","typescript"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(i,l){1&i&&(n.TgZ(0,"div",0)(1,"div",1)(2,"h1"),n._uU(3,"Charts"),n.qZA(),n.TgZ(4,"p"),n._uU(5,"Chart components are based on "),n.TgZ(6,"a",2),n._uU(7,"Charts.js"),n.qZA(),n._uU(8," 3.3.2+, an open source HTML5 based charting library."),n.qZA()()(),n.TgZ(9,"div",3)(10,"h5",4),n._uU(11,"Charts.js"),n.qZA(),n.TgZ(12,"p"),n._uU(13,"To begin with, first you must install the charts.js package using npm and then include it in your project. An example with CLI would be;"),n.qZA(),n.TgZ(14,"app-code",5),n.IAx(),n._uU(15,"\nnpm install chart.js --save\n"),n.fQ9(),n.qZA(),n.TgZ(16,"app-code",6),n.IAx(),n._uU(17,'\n"scripts": [\n    "../node_modules/chart.js/dist/chart.js",\n    //..others\n],\n'),n.fQ9(),n.qZA(),n.TgZ(18,"h5"),n._uU(19,"Chart Component"),n.qZA(),n.TgZ(20,"p"),n._uU(21,"Chart component is used to display a chart on page. The classname is UIChart and element tag is p-chart."),n.qZA(),n.TgZ(22,"h5"),n._uU(23,"Import"),n.qZA(),n.TgZ(24,"app-code",6),n.IAx(),n._uU(25,"\nimport {ChartModule} from 'primeng/chart';\n"),n.fQ9(),n.qZA(),n.TgZ(26,"h5"),n._uU(27,"Change Detection"),n.qZA(),n.TgZ(28,"p"),n._uU(29,"In order to chart to redraw itself, a new data object needs to be created. Changing the array contents without creating a new array instance does not trigger change detection."),n.qZA(),n.TgZ(30,"app-code",5),n.IAx(),n._uU(31,'\n<p-chart type="pie" [data]="data"></p-chart>\n<button type="button" pButton (click)="update($event)"></button>\n'),n.fQ9(),n.qZA(),n.TgZ(32,"app-code",6),n.IAx(),n._uU(33,"\nupdate(event: Event) {\n    this.data = //create new data\n}\n"),n.fQ9(),n.qZA(),n.TgZ(34,"h5"),n._uU(35,"Properties"),n.qZA(),n.TgZ(36,"div",7)(37,"table",8)(38,"thead")(39,"tr")(40,"th"),n._uU(41,"Name"),n.qZA(),n.TgZ(42,"th"),n._uU(43,"Type"),n.qZA(),n.TgZ(44,"th"),n._uU(45,"Default"),n.qZA(),n.TgZ(46,"th"),n._uU(47,"Description"),n.qZA()()(),n.TgZ(48,"tbody")(49,"tr")(50,"td"),n._uU(51,"type"),n.qZA(),n.TgZ(52,"td"),n._uU(53,"string"),n.qZA(),n.TgZ(54,"td"),n._uU(55,"null"),n.qZA(),n.TgZ(56,"td"),n._uU(57,"Type of the chart."),n.qZA()(),n.TgZ(58,"tr")(59,"td"),n._uU(60,"data"),n.qZA(),n.TgZ(61,"td"),n._uU(62,"any"),n.qZA(),n.TgZ(63,"td"),n._uU(64,"null"),n.qZA(),n.TgZ(65,"td"),n._uU(66,"Data to display."),n.qZA()(),n.TgZ(67,"tr")(68,"td"),n._uU(69,"options"),n.qZA(),n.TgZ(70,"td"),n._uU(71,"any"),n.qZA(),n.TgZ(72,"td"),n._uU(73,"null"),n.qZA(),n.TgZ(74,"td"),n._uU(75,"Options to customize the chart."),n.qZA()(),n.TgZ(76,"tr")(77,"td"),n._uU(78,"plugins"),n.qZA(),n.TgZ(79,"td"),n._uU(80,"any[]"),n.qZA(),n.TgZ(81,"td"),n._uU(82,"null"),n.qZA(),n.TgZ(83,"td"),n._uU(84,"Array of per-chart plugins to customize the chart behaviour."),n.qZA()(),n.TgZ(85,"tr")(86,"td"),n._uU(87,"width"),n.qZA(),n.TgZ(88,"td"),n._uU(89,"string"),n.qZA(),n.TgZ(90,"td"),n._uU(91,"null"),n.qZA(),n.TgZ(92,"td"),n._uU(93,"Width of the chart."),n.qZA()(),n.TgZ(94,"tr")(95,"td"),n._uU(96,"height"),n.qZA(),n.TgZ(97,"td"),n._uU(98,"string"),n.qZA(),n.TgZ(99,"td"),n._uU(100,"null"),n.qZA(),n.TgZ(101,"td"),n._uU(102,"Height of the chart."),n.qZA()(),n.TgZ(103,"tr")(104,"td"),n._uU(105,"responsive"),n.qZA(),n.TgZ(106,"td"),n._uU(107,"boolean"),n.qZA(),n.TgZ(108,"td"),n._uU(109,"true"),n.qZA(),n.TgZ(110,"td"),n._uU(111,"Whether the chart is redrawn on screen size change."),n.qZA()(),n.TgZ(112,"tr")(113,"td"),n._uU(114,"onDataSelect"),n.qZA(),n.TgZ(115,"td"),n._uU(116,"function"),n.qZA(),n.TgZ(117,"td"),n._uU(118,"null"),n.qZA(),n.TgZ(119,"td"),n._uU(120,"Callback to execute when an element on chart is clicked."),n.qZA()()()()(),n.TgZ(121,"h5"),n._uU(122,"Methods"),n.qZA(),n.TgZ(123,"div",7)(124,"table",8)(125,"thead")(126,"tr")(127,"th"),n._uU(128,"Name"),n.qZA(),n.TgZ(129,"th"),n._uU(130,"Parameters"),n.qZA(),n.TgZ(131,"th"),n._uU(132,"Description"),n.qZA()()(),n.TgZ(133,"tbody")(134,"tr")(135,"td"),n._uU(136,"refresh"),n.qZA(),n.TgZ(137,"td"),n._uU(138,"-"),n.qZA(),n.TgZ(139,"td"),n._uU(140,"Redraws the graph with new data."),n.qZA()(),n.TgZ(141,"tr")(142,"td"),n._uU(143,"reinit"),n.qZA(),n.TgZ(144,"td"),n._uU(145,"-"),n.qZA(),n.TgZ(146,"td"),n._uU(147,"Destroys the graph first and then creates it again."),n.qZA()(),n.TgZ(148,"tr")(149,"td"),n._uU(150,"generateLegend"),n.qZA(),n.TgZ(151,"td"),n._uU(152,"-"),n.qZA(),n.TgZ(153,"td"),n._uU(154,"Returns an HTML string of a legend for that chart. The legend is generated from the legendCallback in the options."),n.qZA()()()()(),n.TgZ(155,"h5"),n._uU(156,"Chart Types"),n.qZA(),n.TgZ(157,"p"),n._uU(158,"Chart type is defined using the type property. Currently there are 6 options available; pie, doughtnut, line(line or horizontalBar), bar, radar and polarArea."),n.qZA(),n.TgZ(159,"h5"),n._uU(160,"Data"),n.qZA(),n.TgZ(161,"p"),n._uU(162,"Data of a chart is provided using a binding to the data property, each type has its own format of data. Here is an example of a line chart."),n.qZA(),n.TgZ(163,"app-code",5),n.IAx(),n._uU(164,'\n<p-chart type="line" [data]="data"></p-chart>\n'),n.fQ9(),n.qZA(),n.TgZ(165,"app-code",6),n.IAx(),n._uU(166,"\nexport class LineChartDemo {\n\n    data: any;\n    \n    constructor() {\n        this.data = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n                {\n                    label: 'First Dataset',\n                    data: [65, 59, 80, 81, 56, 55, 40]\n                },\n                {\n                    label: 'Second Dataset',\n                    data: [28, 48, 40, 19, 86, 27, 90]\n                }\n            ]\n        }\n    }\n}\n"),n.fQ9(),n.qZA(),n.TgZ(167,"h5"),n._uU(168,"Options"),n.qZA(),n.TgZ(169,"p"),n._uU(170,"While a series can be customized per dataset, general chart options are defined with options property. Example below adds a title and customizes the legend position of the chart. For all available options refer to the charts.js documentation."),n.qZA(),n.TgZ(171,"app-code",5),n.IAx(),n._uU(172,'\n<p-chart type="line" [data]="data" [options]="options"></p-chart>\n'),n.fQ9(),n.qZA(),n.TgZ(173,"app-code",6),n.IAx(),n._uU(174,"\nexport class LineChartDemo {\n\n    data: any;\n    \n    options: any;\n    \n    constructor() {\n        this.data = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n                {\n                    label: 'First Dataset',\n                    data: [65, 59, 80, 81, 56, 55, 40]\n                },\n                {\n                    label: 'Second Dataset',\n                    data: [28, 48, 40, 19, 86, 27, 90]\n                }\n            ]\n        }\n        \n        this.options = {\n            title: {\n                display: true,\n                text: 'My Title',\n                fontSize: 16\n            },\n            legend: {\n                position: 'bottom'\n            }\n        };\n    }\n}\n"),n.fQ9(),n.qZA(),n.TgZ(175,"h5"),n._uU(176,"Events"),n.qZA(),n.TgZ(177,"p"),n._uU(178,"When data is selected with click event, chart component provides onDataSelect callback to process the selected data."),n.qZA(),n.TgZ(179,"app-code",5),n.IAx(),n._uU(180,'\n<p-chart type="line" [data]="data" (onDataSelect)="selectData($event)"></p-chart>\n'),n.fQ9(),n.qZA(),n.TgZ(181,"app-code",6),n.IAx(),n._uU(182,"\nselectData(event) {\n    //event.dataset = Selected dataset\n    //event.element = Selected element\n    //event.element._datasetIndex = Index of the dataset in data\n    //event.element._index = Index of the data in dataset\n}\n"),n.fQ9(),n.qZA(),n.TgZ(183,"h5"),n._uU(184,"Responsive"),n.qZA(),n.TgZ(185,"p"),n._uU(186,"Charts are responsive by default and vw-vh units should be used when customizing the width and height of the chart."),n.qZA(),n.TgZ(187,"app-code",5),n.IAx(),n._uU(188,'\n<p-chart type="line" [data]="data" width="40vw" height="80vh"></p-chart>\n'),n.fQ9(),n.qZA(),n.TgZ(189,"p"),n._uU(190,"If the chart is not responsive, other units should be preferred."),n.qZA(),n.TgZ(191,"app-code",5),n.IAx(),n._uU(192,'\n<p-chart type="line" [data]="data" width="400px" height="400px" [responsive]="false"></p-chart>\n'),n.fQ9(),n.qZA()())},dependencies:[m.h],encapsulation:2}),a})();var h=c(9257),u=c(6140),g=c(4619),f=c(3032);const A=function(){return{width:"40%"}};let T=(()=>{class a{constructor(i){this.configService=i}ngOnInit(){this.data={labels:["A","B","C"],datasets:[{data:[300,50,100],backgroundColor:["#42A5F5","#66BB6A","#FFA726"],hoverBackgroundColor:["#64B5F6","#81C784","#FFB74D"]}]},this.config=this.configService.config,this.updateChartOptions(),this.subscription=this.configService.configUpdate$.subscribe(i=>{this.config=i,this.updateChartOptions()})}updateChartOptions(){this.chartOptions=this.config&&this.config.dark?this.getDarkTheme():this.getLightTheme()}getLightTheme(){return{plugins:{legend:{labels:{color:"#495057"}}}}}getDarkTheme(){return{plugins:{legend:{labels:{color:"#ebedef"}}}}}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}}return a.\u0275fac=function(i){return new(i||a)(n.Y36(h._))},a.\u0275cmp=n.Xpm({type:a,selectors:[["ng-component"]],decls:20,vars:5,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["github","chart/piechart"],[1,"content-section","implementation"],[1,"card","flex","justify-content-center"],["type","pie",3,"data","options"],[1,"content-section","documentation"],["header","Source"],["href","https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/chart/piechart","target","_blank",1,"btn-viewsource"],["lang","markup"],["lang","typescript"]],template:function(i,l){1&i&&(n.TgZ(0,"div",0)(1,"div",1)(2,"h1"),n._uU(3,"Pie Chart"),n.qZA(),n.TgZ(4,"p"),n._uU(5,"A pie chart is a circular statistical graphic, which is divided into slices to illustrate numerical proportion."),n.qZA()(),n._UZ(6,"app-demoActions",2),n.qZA(),n.TgZ(7,"div",3)(8,"div",4),n._UZ(9,"p-chart",5),n.qZA()(),n.TgZ(10,"div",6)(11,"p-tabView")(12,"p-tabPanel",7)(13,"a",8)(14,"span"),n._uU(15,"View on GitHub"),n.qZA()(),n.TgZ(16,"app-code",9),n.IAx(),n._uU(17,'\n<p-chart type="pie" [data]="data" [options]="chartOptions"  [style]="{\'width\': \'40%\'}"></p-chart>\n'),n.fQ9(),n.qZA(),n.TgZ(18,"app-code",10),n.IAx(),n._uU(19,'\nexport class PieChartDemo implements OnInit {\n\n    data: any;\n\n    chartOptions: any;\n\n    subscription: Subscription;\n\n    config: AppConfig;\n\n    constructor(private configService: AppConfigService) {}\n\n    ngOnInit() {\n        this.data = {\n            labels: [\'A\',\'B\',\'C\'],\n            datasets: [\n                {\n                    data: [300, 50, 100],\n                    backgroundColor: [\n                        "#42A5F5",\n                        "#66BB6A",\n                        "#FFA726"\n                    ],\n                    hoverBackgroundColor: [\n                        "#64B5F6",\n                        "#81C784",\n                        "#FFB74D"\n                    ]\n                }\n            ]\n        };\n\n        this.config = this.configService.config;\n        this.updateChartOptions();\n        this.subscription = this.configService.configUpdate$.subscribe(config => {\n            this.config = config;\n            this.updateChartOptions();\n        });\n    }\n\n    updateChartOptions() {\n        this.chartOptions = this.config && this.config.dark ? this.getDarkTheme() : this.getLightTheme();\n    }\n\n    getLightTheme() {\n        return {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: \'#495057\'\n                    }\n                }\n            }\n        }\n    }\n\n    getDarkTheme() {\n        return {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: \'#ebedef\'\n                    }\n                }\n            }\n        }\n    }\n}\n\n'),n.fQ9(),n.qZA()()()()),2&i&&(n.xp6(9),n.Akn(n.DdM(4,A)),n.Q6J("data",l.data)("options",l.chartOptions))},dependencies:[u.C,g.xf,g.x4,f.P,m.h],encapsulation:2}),a})();const k=function(){return{width:"40%"}};let O=(()=>{class a{constructor(i){this.configService=i}ngOnInit(){this.data={labels:["A","B","C"],datasets:[{data:[300,50,100],backgroundColor:["#FF6384","#36A2EB","#FFCE56"],hoverBackgroundColor:["#FF6384","#36A2EB","#FFCE56"]}]},this.config=this.configService.config,this.updateChartOptions(),this.subscription=this.configService.configUpdate$.subscribe(i=>{this.config=i,this.updateChartOptions()})}updateChartOptions(){this.chartOptions=this.config&&this.config.dark?this.getDarkTheme():this.getLightTheme()}getLightTheme(){return{plugins:{legend:{labels:{color:"#495057"}}}}}getDarkTheme(){return{plugins:{legend:{labels:{color:"#ebedef"}}}}}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}}return a.\u0275fac=function(i){return new(i||a)(n.Y36(h._))},a.\u0275cmp=n.Xpm({type:a,selectors:[["ng-component"]],decls:20,vars:5,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["github","chart/doughnutchart"],[1,"content-section","implementation"],[1,"card","flex","justify-content-center"],["type","doughnut",3,"data","options"],[1,"content-section","documentation"],["header","Source"],["href","https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/chart/doughnutchart","target","_blank",1,"btn-viewsource"],["lang","markup"],["lang","typescript"]],template:function(i,l){1&i&&(n.TgZ(0,"div",0)(1,"div",1)(2,"h1"),n._uU(3,"DoughnutChart"),n.qZA(),n.TgZ(4,"p"),n._uU(5,"A doughnut chart is a variant of the pie chart, with a blank center allowing for additional information about the data as a whole to be included."),n.qZA()(),n._UZ(6,"app-demoActions",2),n.qZA(),n.TgZ(7,"div",3)(8,"div",4),n._UZ(9,"p-chart",5),n.qZA()(),n.TgZ(10,"div",6)(11,"p-tabView")(12,"p-tabPanel",7)(13,"a",8)(14,"span"),n._uU(15,"View on GitHub"),n.qZA()(),n.TgZ(16,"app-code",9),n.IAx(),n._uU(17,'\n<p-chart type="doughnut" [data]="data" [options]="chartOptions" [style]="{\'width\': \'40%\'}"></p-chart>\n'),n.fQ9(),n.qZA(),n.TgZ(18,"app-code",10),n.IAx(),n._uU(19,'\nexport class DoughnutChartDemo {\n\n    data: any;\n\n    chartOptions: any;\n\n    subscription: Subscription;\n\n    config: AppConfig;\n\n    constructor(private configService: AppConfigService) {}\n\n    ngOnInit() {\n        this.data = {\n            labels: [\'A\',\'B\',\'C\'],\n            datasets: [\n                {\n                    data: [300, 50, 100],\n                    backgroundColor: [\n                        "#FF6384",\n                        "#36A2EB",\n                        "#FFCE56"\n                    ],\n                    hoverBackgroundColor: [\n                        "#FF6384",\n                        "#36A2EB",\n                        "#FFCE56"\n                    ]\n                }\n            ]\n        };\n\n        this.config = this.configService.config;\n        this.updateChartOptions();\n        this.subscription = this.configService.configUpdate$.subscribe(config => {\n            this.config = config;\n            this.updateChartOptions();\n        });\n    }\n\n    updateChartOptions() {\n        this.chartOptions = this.config && this.config.dark ? this.getDarkTheme() : this.getLightTheme();\n    }\n\n    getLightTheme() {\n        return {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: \'#495057\'\n                    }\n                }\n            }\n        }\n    }\n\n    getDarkTheme() {\n        return {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: \'#ebedef\'\n                    }\n                }\n            }\n        }\n    }\n}\n'),n.fQ9(),n.qZA()()()()),2&i&&(n.xp6(9),n.Akn(n.DdM(4,k)),n.Q6J("data",l.data)("options",l.chartOptions))},dependencies:[u.C,g.xf,g.x4,f.P,m.h],encapsulation:2}),a})(),x=(()=>{class a{constructor(i){this.configService=i}ngOnInit(){this.basicData={labels:["January","February","March","April","May","June","July"],datasets:[{label:"My First dataset",backgroundColor:"#42A5F5",data:[65,59,80,81,56,55,40]},{label:"My Second dataset",backgroundColor:"#FFA726",data:[28,48,40,19,86,27,90]}]},this.multiAxisData={labels:["January","February","March","April","May","June","July"],datasets:[{label:"Dataset 1",backgroundColor:["#EC407A","#AB47BC","#42A5F5","#7E57C2","#66BB6A","#FFCA28","#26A69A"],yAxisID:"y",data:[65,59,80,81,56,55,10]},{label:"Dataset 2",backgroundColor:"#78909C",yAxisID:"y1",data:[28,48,40,19,86,27,90]}]},this.multiAxisOptions={plugins:{legend:{labels:{color:"#495057"}},tooltips:{mode:"index",intersect:!0}},scales:{x:{ticks:{color:"#495057"},grid:{color:"#ebedef"}},y:{type:"linear",display:!0,position:"left",ticks:{min:0,max:100,color:"#495057"},grid:{color:"#ebedef"}},y1:{type:"linear",display:!0,position:"right",grid:{drawOnChartArea:!1,color:"#ebedef"},ticks:{min:0,max:100,color:"#495057"}}}},this.horizontalOptions={indexAxis:"y",plugins:{legend:{labels:{color:"#495057"}}},scales:{x:{ticks:{color:"#495057"},grid:{color:"#ebedef"}},y:{ticks:{color:"#495057"},grid:{color:"#ebedef"}}}},this.stackedData={labels:["January","February","March","April","May","June","July"],datasets:[{type:"bar",label:"Dataset 1",backgroundColor:"#42A5F5",data:[50,25,12,48,90,76,42]},{type:"bar",label:"Dataset 2",backgroundColor:"#66BB6A",data:[21,84,24,75,37,65,34]},{type:"bar",label:"Dataset 3",backgroundColor:"#FFA726",data:[41,52,24,74,23,21,32]}]},this.stackedOptions={tooltips:{mode:"index",intersect:!1},responsive:!0,scales:{xAxes:[{stacked:!0}],yAxes:[{stacked:!0}]}},this.config=this.configService.config,this.updateChartOptions(),this.subscription=this.configService.configUpdate$.subscribe(i=>{this.config=i,this.updateChartOptions()})}updateChartOptions(){this.config.dark?this.applyDarkTheme():this.applyLightTheme()}applyDarkTheme(){this.basicOptions={plugins:{legend:{labels:{color:"#ebedef"}}},scales:{x:{ticks:{color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"}},y:{ticks:{color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"}}}},this.horizontalOptions={indexAxis:"y",plugins:{legend:{labels:{color:"#ebedef"}}},scales:{x:{ticks:{color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"}},y:{ticks:{color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"}}}},this.multiAxisOptions={plugins:{legend:{labels:{color:"#ebedef"}},tooltips:{mode:"index",intersect:!0}},scales:{x:{ticks:{color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"}},y:{type:"linear",display:!0,position:"left",ticks:{min:0,max:100,color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"}},y1:{type:"linear",display:!0,position:"right",grid:{drawOnChartArea:!1,color:"rgba(255,255,255,0.2)"},ticks:{min:0,max:100,color:"#ebedef"}}}},this.stackedOptions={plugins:{legend:{labels:{color:"#ebedef"}},tooltips:{mode:"index",intersect:!1}},scales:{x:{stacked:!0,ticks:{color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"}},y:{stacked:!0,ticks:{color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"}}}}}applyLightTheme(){this.basicOptions={plugins:{legend:{labels:{color:"#495057"}}},scales:{x:{ticks:{color:"#495057"},grid:{color:"#ebedef"}},y:{ticks:{color:"#495057"},grid:{color:"#ebedef"}}}},this.horizontalOptions={indexAxis:"y",plugins:{legend:{labels:{color:"#495057"}}},scales:{x:{ticks:{color:"#495057"},grid:{color:"#ebedef"}},y:{ticks:{color:"#495057"},grid:{color:"#ebedef"}}}},this.multiAxisOptions={plugins:{legend:{labels:{color:"#495057"}},tooltips:{mode:"index",intersect:!0}},scales:{x:{ticks:{color:"#495057"},grid:{color:"#ebedef"}},y:{type:"linear",display:!0,position:"left",ticks:{min:0,max:100,color:"#495057"},grid:{color:"#ebedef"}},y1:{type:"linear",display:!0,position:"right",grid:{drawOnChartArea:!1,color:"#ebedef"},ticks:{min:0,max:100,color:"#495057"}}}},this.stackedOptions={plugins:{tooltips:{mode:"index",intersect:!1},legend:{labels:{color:"#495057"}}},scales:{x:{stacked:!0,ticks:{color:"#495057"},grid:{color:"#ebedef"}},y:{stacked:!0,ticks:{color:"#495057"},grid:{color:"#ebedef"}}}}}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}}return a.\u0275fac=function(i){return new(i||a)(n.Y36(h._))},a.\u0275cmp=n.Xpm({type:a,selectors:[["ng-component"]],decls:34,vars:8,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["github","chart/barchart"],[1,"content-section","implementation"],[1,"card"],["type","bar",3,"data","options"],[1,"content-section","documentation"],["header","Source"],["href","https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/chart/barchart","target","_blank",1,"btn-viewsource"],["lang","markup"],["lang","typescript"]],template:function(i,l){1&i&&(n.TgZ(0,"div",0)(1,"div",1)(2,"h1"),n._uU(3,"BarChart"),n.qZA(),n.TgZ(4,"p"),n._uU(5,"A bar chart or bar graph is a chart that presents Grouped data with rectangular bars with lengths proportional to the values that they represent."),n.qZA()(),n._UZ(6,"app-demoActions",2),n.qZA(),n.TgZ(7,"div",3)(8,"div",4)(9,"h5"),n._uU(10,"Vertical"),n.qZA(),n._UZ(11,"p-chart",5),n.qZA(),n.TgZ(12,"div",4)(13,"h5"),n._uU(14,"Horizontal"),n.qZA(),n._UZ(15,"p-chart",5),n.qZA(),n.TgZ(16,"div",4)(17,"h5"),n._uU(18,"Multi Axis"),n.qZA(),n._UZ(19,"p-chart",5),n.qZA(),n.TgZ(20,"div",4)(21,"h5"),n._uU(22,"Stacked"),n.qZA(),n._UZ(23,"p-chart",5),n.qZA()(),n.TgZ(24,"div",6)(25,"p-tabView")(26,"p-tabPanel",7)(27,"a",8)(28,"span"),n._uU(29,"View on GitHub"),n.qZA()(),n.TgZ(30,"app-code",9),n.IAx(),n._uU(31,'\n<div class="card">\n    <h5>Vertical</h5>\n    <p-chart type="bar" [data]="basicData" [options]="basicOptions"></p-chart>\n</div>\n\n<div class="card">\n    <h5>Horizontal</h5>\n    <p-chart type="bar" [data]="basicData" [options]="horizontalOptions"></p-chart>\n</div>\n\n<div class="card">\n    <h5>Multi Axis</h5>\n    <p-chart type="bar" [data]="multiAxisData" [options]="multiAxisOptions"></p-chart>\n</div>\n\n<div class="card">\n    <h5>Stacked</h5>\n    <p-chart type="bar" [data]="stackedData" [options]="stackedOptions"></p-chart>\n</div>\n'),n.fQ9(),n.qZA(),n.TgZ(32,"app-code",10),n.IAx(),n._uU(33,"\nexport class BarChartDemo {\n\n    basicData: any;\n\n    basicOptions: any;\n\n    multiAxisData: any;\n\n    chartOptions: any;\n\n    multiAxisOptions: any;\n\n    stackedData: any;\n\n    stackedOptions: any;\n\n    horizontalOptions: any;\n\n    subscription: Subscription;\n\n    config: AppConfig;\n\n    constructor(private configService: AppConfigService) {}\n\n    ngOnInit() {\n        this.basicData = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n                {\n                    label: 'My First dataset',\n                    backgroundColor: '#42A5F5',\n                    data: [65, 59, 80, 81, 56, 55, 40]\n                },\n                {\n                    label: 'My Second dataset',\n                    backgroundColor: '#FFA726',\n                    data: [28, 48, 40, 19, 86, 27, 90]\n                }\n            ]\n        };\n\n        this.multiAxisData = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [{\n                label: 'Dataset 1',\n                backgroundColor: [\n                    '#EC407A',\n                    '#AB47BC',\n                    '#42A5F5',\n                    '#7E57C2',\n                    '#66BB6A',\n                    '#FFCA28',\n                    '#26A69A'\n                ],\n                yAxisID: 'y',\n                data: [65, 59, 80, 81, 56, 55, 10]\n            }, {\n                label: 'Dataset 2',\n                backgroundColor: '#78909C',\n                yAxisID: 'y1',\n                data: [28, 48, 40, 19, 86, 27, 90]\n            }]\n        };\n\n        this.multiAxisOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                },\n                tooltips: {\n                    mode: 'index',\n                    intersect: true\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                },\n                y: {\n                    type: 'linear',\n                    display: true,\n                    position: 'left',\n                    ticks: {\n                        min: 0,\n                        max: 100,\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                },\n                y1: {\n                    type: 'linear',\n                    display: true,\n                    position: 'right',\n                    grid: {\n                        drawOnChartArea: false,\n                        color: '#ebedef'\n                    },\n                    ticks: {\n                        min: 0,\n                        max: 100,\n                        color: '#495057'\n                    }\n                }\n            }\n        };\n\n        this.horizontalOptions = {\n            indexAxis: 'y',\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        };\n\n        this.stackedData = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [{\n                type: 'bar',\n                label: 'Dataset 1',\n                backgroundColor: '#42A5F5',\n                data: [\n                    50,\n                    25,\n                    12,\n                    48,\n                    90,\n                    76,\n                    42\n                ]\n            }, {\n                type: 'bar',\n                label: 'Dataset 2',\n                backgroundColor: '#66BB6A',\n                data: [\n                    21,\n                    84,\n                    24,\n                    75,\n                    37,\n                    65,\n                    34\n                ]\n            }, {\n                type: 'bar',\n                label: 'Dataset 3',\n                backgroundColor: '#FFA726',\n                data: [\n                    41,\n                    52,\n                    24,\n                    74,\n                    23,\n                    21,\n                    32\n                ]\n            }]\n        };\n\n        this.stackedOptions = {\n            tooltips: {\n                mode: 'index',\n                intersect: false\n            },\n            responsive: true,\n            scales: {\n                xAxes: [{\n                    stacked: true,\n                }],\n                yAxes: [{\n                    stacked: true\n                }]\n            }\n        };\n\n        this.config = this.configService.config;\n        this.updateChartOptions();\n        this.subscription = this.configService.configUpdate$.subscribe(config => {\n            this.config = config;\n            this.updateChartOptions();\n        });\n    }\n\n    updateChartOptions() {\n        if (this.config.dark)\n            this.applyDarkTheme();\n        else\n            this.applyLightTheme();\n    }\n\n    applyDarkTheme() {\n        this.basicOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                }\n            }\n        };\n\n        this.horizontalOptions = {\n            indexAxis: 'y',\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                }\n            }\n        };\n\n        this.multiAxisOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                },\n                tooltips: {\n                    mode: 'index',\n                    intersect: true\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                },\n                y: {\n                    type: 'linear',\n                    display: true,\n                    position: 'left',\n                    ticks: {\n                        min: 0,\n                        max: 100,\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                },\n                y1: {\n                    type: 'linear',\n                    display: true,\n                    position: 'right',\n                    grid: {\n                        drawOnChartArea: false,\n                        color: 'rgba(255,255,255,0.2)'\n                    },\n                    ticks: {\n                        min: 0,\n                        max: 100,\n                        color: '#ebedef'\n                    }\n                }\n            }\n        };\n\n        this.stackedOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                },\n                tooltips: {\n                    mode: 'index',\n                    intersect: false\n                }\n            },\n            scales: {\n                x: {\n                    stacked: true,\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                },\n                y: {\n                    stacked: true,\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                }\n            }\n        };\n    }\n\n    applyLightTheme() {\n        this.basicOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        };\n\n        this.horizontalOptions = {\n            indexAxis: 'y',\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        };\n\n        this.multiAxisOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                },\n                tooltips: {\n                    mode: 'index',\n                    intersect: true\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                },\n                y: {\n                    type: 'linear',\n                    display: true,\n                    position: 'left',\n                    ticks: {\n                        min: 0,\n                        max: 100,\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                },\n                y1: {\n                    type: 'linear',\n                    display: true,\n                    position: 'right',\n                    grid: {\n                        drawOnChartArea: false,\n                        color: '#ebedef'\n                    },\n                    ticks: {\n                        min: 0,\n                        max: 100,\n                        color: '#495057'\n                    }\n                }\n            }\n        };\n\n        this.stackedOptions = {\n            plugins: {\n                tooltips: {\n                    mode: 'index',\n                    intersect: false\n                },\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    stacked: true,\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                },\n                y: {\n                    stacked: true,\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        };\n    }\n}\n\n"),n.fQ9(),n.qZA()()()()),2&i&&(n.xp6(11),n.Q6J("data",l.basicData)("options",l.basicOptions),n.xp6(4),n.Q6J("data",l.basicData)("options",l.horizontalOptions),n.xp6(4),n.Q6J("data",l.multiAxisData)("options",l.multiAxisOptions),n.xp6(4),n.Q6J("data",l.stackedData)("options",l.stackedOptions))},dependencies:[u.C,g.xf,g.x4,f.P,m.h],encapsulation:2}),a})();var _=c(8476);let D=(()=>{class a{constructor(i,l){this.messageService=i,this.configService=l}ngOnInit(){this.basicData={labels:["January","February","March","April","May","June","July"],datasets:[{label:"First Dataset",data:[65,59,80,81,56,55,40],fill:!1,borderColor:"#42A5F5",tension:.4},{label:"Second Dataset",data:[28,48,40,19,86,27,90],fill:!1,borderColor:"#FFA726",tension:.4}]},this.multiAxisData={labels:["January","February","March","April","May","June","July"],datasets:[{label:"Dataset 1",fill:!1,borderColor:"#42A5F5",yAxisID:"y",tension:.4,data:[65,59,80,81,56,55,10]},{label:"Dataset 2",fill:!1,borderColor:"#00bb7e",yAxisID:"y1",tension:.4,data:[28,48,40,19,86,27,90]}]},this.multiAxisOptions={stacked:!1,plugins:{legend:{labels:{color:"#495057"}}},scales:{x:{ticks:{color:"#495057"},grid:{color:"#ebedef"}},y:{type:"linear",display:!0,position:"left",ticks:{color:"#495057"},grid:{color:"#ebedef"}},y1:{type:"linear",display:!0,position:"right",ticks:{color:"#495057"},grid:{drawOnChartArea:!1,color:"#ebedef"}}}},this.lineStylesData={labels:["January","February","March","April","May","June","July"],datasets:[{label:"First Dataset",data:[65,59,80,81,56,55,40],fill:!1,tension:.4,borderColor:"#42A5F5"},{label:"Second Dataset",data:[28,48,40,19,86,27,90],fill:!1,borderDash:[5,5],tension:.4,borderColor:"#66BB6A"},{label:"Third Dataset",data:[12,51,62,33,21,62,45],fill:!0,borderColor:"#FFA726",tension:.4,backgroundColor:"rgba(255,167,38,0.2)"}]},this.config=this.configService.config,this.updateChartOptions(),this.subscription=this.configService.configUpdate$.subscribe(i=>{this.config=i,this.updateChartOptions()})}updateChartOptions(){this.config.dark?this.applyDarkTheme():this.applyLightTheme()}applyLightTheme(){this.basicOptions={plugins:{legend:{labels:{color:"#495057"}}},scales:{x:{ticks:{color:"#495057"},grid:{color:"#ebedef"}},y:{ticks:{color:"#495057"},grid:{color:"#ebedef"}}}},this.multiAxisOptions={stacked:!1,plugins:{legend:{labels:{color:"#495057"}}},scales:{x:{ticks:{color:"#495057"},grid:{color:"#ebedef"}},y:{type:"linear",display:!0,position:"left",ticks:{color:"#495057"},grid:{color:"#ebedef"}},y1:{type:"linear",display:!0,position:"right",ticks:{color:"#495057"},grid:{drawOnChartArea:!1,color:"#ebedef"}}}}}applyDarkTheme(){this.basicOptions={plugins:{legend:{labels:{color:"#ebedef"}}},scales:{x:{ticks:{color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"}},y:{ticks:{color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"}}}},this.multiAxisOptions={stacked:!1,plugins:{legend:{labels:{color:"#ebedef"}}},scales:{x:{ticks:{color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"}},y:{type:"linear",display:!0,position:"left",ticks:{color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"}},y1:{type:"linear",display:!0,position:"right",ticks:{color:"#ebedef"},grid:{drawOnChartArea:!1,color:"rgba(255,255,255,0.2)"}}}}}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}}return a.\u0275fac=function(i){return new(i||a)(n.Y36(_.ez),n.Y36(h._))},a.\u0275cmp=n.Xpm({type:a,selectors:[["ng-component"]],features:[n._Bn([_.ez])],decls:30,vars:6,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["github","chart/linechart"],[1,"content-section","implementation"],[1,"card"],["type","line",3,"data","options"],[1,"content-section","documentation"],["href","https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/chart/linechart","target","_blank",1,"btn-viewsource"],["header","Source"],["lang","markup"],["lang","typescript"]],template:function(i,l){1&i&&(n.TgZ(0,"div",0)(1,"div",1)(2,"h1"),n._uU(3,"Line Chart"),n.qZA(),n.TgZ(4,"p"),n._uU(5,"A line chart or line graph is a type of chart which displays information as a series of data points called 'markers' connected by straight line segments."),n.qZA()(),n._UZ(6,"app-demoActions",2),n.qZA(),n.TgZ(7,"div",3)(8,"div",4)(9,"h5"),n._uU(10,"Basic"),n.qZA(),n._UZ(11,"p-chart",5),n.qZA(),n.TgZ(12,"div",4)(13,"h5"),n._uU(14,"Multi Axis"),n.qZA(),n._UZ(15,"p-chart",5),n.qZA(),n.TgZ(16,"div",4)(17,"h5"),n._uU(18,"Line Styles"),n.qZA(),n._UZ(19,"p-chart",5),n.qZA()(),n.TgZ(20,"div",6)(21,"p-tabView")(22,"a",7)(23,"span"),n._uU(24,"View on GitHub"),n.qZA()(),n.TgZ(25,"p-tabPanel",8)(26,"app-code",9),n.IAx(),n._uU(27,'\n<div class="card">\n    <h5>Basic</h5>\n    <p-chart type="line" [data]="basicData" [options]="basicOptions"></p-chart>\n</div>\n\n<div class="card">\n    <h5>Multi Axis</h5>\n    <p-chart type="line" [data]="multiAxisData" [options]="multiAxisOptions"></p-chart>\n</div>\n\n<div class="card">\n    <h5>Line Styles</h5>\n    <p-chart type="line" [data]="lineStylesData" [options]="basicOptions"></p-chart>\n</div>\n'),n.fQ9(),n.qZA(),n.TgZ(28,"app-code",10),n.IAx(),n._uU(29,"\nexport class LineChartDemo implements OnInit {\n\n    basicData: any;\n\n    multiAxisData: any;\n\n    multiAxisOptions: any;\n\n    lineStylesData: any;\n\n    basicOptions: any;\n\n    subscription: Subscription;\n\n    config: AppConfig;\n\n    constructor(private messageService: MessageService, private configService: AppConfigService) {}\n\n    ngOnInit() {\n        this.basicData = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n                {\n                    label: 'First Dataset',\n                    data: [65, 59, 80, 81, 56, 55, 40],\n                    fill: false,\n                    borderColor: '#42A5F5',\n                    tension: .4\n                },\n                {\n                    label: 'Second Dataset',\n                    data: [28, 48, 40, 19, 86, 27, 90],\n                    fill: false,\n                    borderColor: '#FFA726',\n                    tension: .4\n                }\n            ]\n        };\n\n        this.multiAxisData = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [{\n                label: 'Dataset 1',\n                fill: false,\n                borderColor: '#42A5F5',\n                yAxisID: 'y',\n                tension: .4,\n                data: [65, 59, 80, 81, 56, 55, 10]\n            }, {\n                label: 'Dataset 2',\n                fill: false,\n                borderColor: '#00bb7e',\n                yAxisID: 'y1',\n                tension: .4,\n                data: [28, 48, 40, 19, 86, 27, 90]\n            }]\n        };\n\n        this.multiAxisOptions = {\n            stacked: false,\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                },\n                y: {\n                    type: 'linear',\n                    display: true,\n                    position: 'left',\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                },\n                y1: {\n                    type: 'linear',\n                    display: true,\n                    position: 'right',\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        drawOnChartArea: false,\n                        color: '#ebedef'\n                    }\n                }\n            }\n        };\n\n        this.lineStylesData = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n                {\n                    label: 'First Dataset',\n                    data: [65, 59, 80, 81, 56, 55, 40],\n                    fill: false,\n                    tension: .4,\n                    borderColor: '#42A5F5'\n                },\n                {\n                    label: 'Second Dataset',\n                    data: [28, 48, 40, 19, 86, 27, 90],\n                    fill: false,\n                    borderDash: [5, 5],\n                    tension: .4,\n                    borderColor: '#66BB6A'\n                },\n                {\n                    label: 'Third Dataset',\n                    data: [12, 51, 62, 33, 21, 62, 45],\n                    fill: true,\n                    borderColor: '#FFA726',\n                    tension: .4,\n                    backgroundColor: 'rgba(255,167,38,0.2)'\n                }\n            ]\n        };\n\n        this.config = this.configService.config;\n        this.updateChartOptions();\n        this.subscription = this.configService.configUpdate$.subscribe(config => {\n            this.config = config;\n            this.updateChartOptions();\n        });\n    }\n\n    updateChartOptions() {\n        if (this.config.dark)\n            this.applyDarkTheme();\n        else\n            this.applyLightTheme();\n    }\n\n    applyLightTheme() {\n        this.basicOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        };\n\n        this.multiAxisOptions = {\n            stacked: false,\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                },\n                y: {\n                    type: 'linear',\n                    display: true,\n                    position: 'left',\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                },\n                y1: {\n                    type: 'linear',\n                    display: true,\n                    position: 'right',\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        drawOnChartArea: false,\n                        color: '#ebedef'\n                    }\n                }\n            }\n        };\n    }\n\n    applyDarkTheme() {\n        this.basicOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                }\n            }\n        };\n\n        this.multiAxisOptions = {\n            stacked: false,\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                },\n                y: {\n                    type: 'linear',\n                    display: true,\n                    position: 'left',\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                },\n                y1: {\n                    type: 'linear',\n                    display: true,\n                    position: 'right',\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        drawOnChartArea: false,\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                }\n            }\n        };\n    }\n}\n"),n.fQ9(),n.qZA()()()()),2&i&&(n.xp6(11),n.Q6J("data",l.basicData)("options",l.basicOptions),n.xp6(4),n.Q6J("data",l.multiAxisData)("options",l.multiAxisOptions),n.xp6(4),n.Q6J("data",l.lineStylesData)("options",l.basicOptions))},dependencies:[u.C,g.xf,g.x4,f.P,m.h],encapsulation:2}),a})();const U=function(){return{width:"40%"}};let w=(()=>{class a{constructor(i){this.configService=i}ngOnInit(){this.data={datasets:[{data:[11,16,7,3,14],backgroundColor:["#42A5F5","#66BB6A","#FFA726","#26C6DA","#7E57C2"],label:"My dataset"}],labels:["Red","Green","Yellow","Grey","Blue"]},this.config=this.configService.config,this.updateChartOptions(),this.subscription=this.configService.configUpdate$.subscribe(i=>{this.config=i,this.updateChartOptions()})}updateChartOptions(){this.chartOptions=this.config&&this.config.dark?this.getDarkTheme():this.getLightTheme()}getLightTheme(){return{plugins:{legend:{labels:{color:"#495057"}}},scales:{r:{grid:{color:"#ebedef"}}}}}getDarkTheme(){return{plugins:{legend:{labels:{color:"#ebedef"}}},scales:{r:{grid:{color:"rgba(255,255,255,0.2)"}}}}}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}}return a.\u0275fac=function(i){return new(i||a)(n.Y36(h._))},a.\u0275cmp=n.Xpm({type:a,selectors:[["ng-component"]],decls:20,vars:5,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["github","chart/polarareachart"],[1,"content-section","implementation"],[1,"card","flex","justify-content-center"],["type","polarArea",3,"data","options"],[1,"content-section","documentation"],["header","Source"],["href","https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/chart/polarareachart","target","_blank",1,"btn-viewsource"],["lang","markup"],["lang","typescript"]],template:function(i,l){1&i&&(n.TgZ(0,"div",0)(1,"div",1)(2,"h1"),n._uU(3,"Polar Area Chart"),n.qZA(),n.TgZ(4,"p"),n._uU(5,"Polar area charts are similar to pie charts, but each segment has the same angle - the radius of the segment differs depending on the value."),n.qZA()(),n._UZ(6,"app-demoActions",2),n.qZA(),n.TgZ(7,"div",3)(8,"div",4),n._UZ(9,"p-chart",5),n.qZA()(),n.TgZ(10,"div",6)(11,"p-tabView")(12,"p-tabPanel",7)(13,"a",8)(14,"span"),n._uU(15,"View on GitHub"),n.qZA()(),n.TgZ(16,"app-code",9),n.IAx(),n._uU(17,'\n<p-chart type="polarArea" [data]="data" [options]="chartOptions" [style]="{\'width\': \'40%\'}"></p-chart>\n'),n.fQ9(),n.qZA(),n.TgZ(18,"app-code",10),n.IAx(),n._uU(19,'\nexport class PolarAreaChartDemo {\n\n    data: any;\n\n    chartOptions: any;\n\n    subscription: Subscription;\n\n    config: AppConfig;\n\n    constructor(private configService: AppConfigService) {}\n\n    ngOnInit() {\n        this.data = {\n            datasets: [{\n                data: [\n                    11,\n                    16,\n                    7,\n                    3,\n                    14\n                ],\n                backgroundColor: [\n                    "#42A5F5",\n                    "#66BB6A",\n                    "#FFA726",\n                    "#26C6DA",\n                    "#7E57C2"\n                ],\n                label: \'My dataset\'\n            }],\n            labels: [\n                "Red",\n                "Green",\n                "Yellow",\n                "Grey",\n                "Blue"\n            ]\n        };\n\n        this.config = this.configService.config;\n        this.updateChartOptions();\n        this.subscription = this.configService.configUpdate$.subscribe(config => {\n            this.config = config;\n            this.updateChartOptions();\n        });\n    }\n\n    updateChartOptions() {\n        this.chartOptions = this.config && this.config.dark ? this.getDarkTheme() : this.getLightTheme();\n    }\n\n    getLightTheme() {\n        return {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: \'#495057\'\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    grid: {\n                        color: \'#ebedef\'\n                    }\n                }\n            }\n        }\n    }\n\n    getDarkTheme() {\n        return {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: \'#ebedef\'\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    grid: {\n                        color: \'rgba(255,255,255,0.2)\'\n                    }\n                }\n            }\n        }\n    }\n}\n'),n.fQ9(),n.qZA()()()()),2&i&&(n.xp6(9),n.Akn(n.DdM(4,U)),n.Q6J("data",l.data)("options",l.chartOptions))},dependencies:[u.C,g.xf,g.x4,f.P,m.h],encapsulation:2}),a})();const q=function(){return{width:"40%"}};let S=(()=>{class a{constructor(i){this.configService=i}ngOnInit(){this.data={labels:["Eating","Drinking","Sleeping","Designing","Coding","Cycling","Running"],datasets:[{label:"My First dataset",backgroundColor:"rgba(179,181,198,0.2)",borderColor:"rgba(179,181,198,1)",pointBackgroundColor:"rgba(179,181,198,1)",pointBorderColor:"#fff",pointHoverBackgroundColor:"#fff",pointHoverBorderColor:"rgba(179,181,198,1)",data:[65,59,90,81,56,55,40]},{label:"My Second dataset",backgroundColor:"rgba(255,99,132,0.2)",borderColor:"rgba(255,99,132,1)",pointBackgroundColor:"rgba(255,99,132,1)",pointBorderColor:"#fff",pointHoverBackgroundColor:"#fff",pointHoverBorderColor:"rgba(255,99,132,1)",data:[28,48,40,19,96,27,100]}]},this.config=this.configService.config,this.updateChartOptions(),this.subscription=this.configService.configUpdate$.subscribe(i=>{this.config=i,this.updateChartOptions()})}updateChartOptions(){this.chartOptions=this.config&&this.config.dark?this.getDarkTheme():this.getLightTheme()}getLightTheme(){return{plugins:{legend:{labels:{color:"#495057"}}},scales:{r:{pointLabels:{color:"#495057"},grid:{color:"#ebedef"},angleLines:{color:"#ebedef"}}}}}getDarkTheme(){return{plugins:{legend:{labels:{color:"#ebedef"}}},scales:{r:{pointLabels:{color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"},angleLines:{color:"rgba(255,255,255,0.2)"}}}}}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}}return a.\u0275fac=function(i){return new(i||a)(n.Y36(h._))},a.\u0275cmp=n.Xpm({type:a,selectors:[["ng-component"]],decls:20,vars:5,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["github","chart/radarchart"],[1,"content-section","implementation"],[1,"card","flex","justify-content-center"],["type","radar",3,"data","options"],[1,"content-section","documentation"],["header","Source"],["href","https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/chart/radarchart","target","_blank",1,"btn-viewsource"],["lang","markup"],["lang","typescript"]],template:function(i,l){1&i&&(n.TgZ(0,"div",0)(1,"div",1)(2,"h1"),n._uU(3,"Radar Chart"),n.qZA(),n.TgZ(4,"p"),n._uU(5,"A radar chart is a graphical method of displaying multivariate data in the form of a two-dimensional chart of three or more quantitative variables represented on axes starting from the same point."),n.qZA()(),n._UZ(6,"app-demoActions",2),n.qZA(),n.TgZ(7,"div",3)(8,"div",4),n._UZ(9,"p-chart",5),n.qZA()(),n.TgZ(10,"div",6)(11,"p-tabView")(12,"p-tabPanel",7)(13,"a",8)(14,"span"),n._uU(15,"View on GitHub"),n.qZA()(),n.TgZ(16,"app-code",9),n.IAx(),n._uU(17,'\n<p-chart type="radar" [data]="data" [options]="chartOptions" [style]="{\'width\': \'40%\'}"></p-chart>\n'),n.fQ9(),n.qZA(),n.TgZ(18,"app-code",10),n.IAx(),n._uU(19,"\nexport class RadarChartDemo {\n\n    data: any;\n\n    chartOptions: any;\n\n    subscription: Subscription;\n\n    config: AppConfig;\n\n    constructor(private configService: AppConfigService) {}\n\n    ngOnInit() {\n        this.data = {\n            labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n            datasets: [\n                {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(179,181,198,0.2)',\n                    borderColor: 'rgba(179,181,198,1)',\n                    pointBackgroundColor: 'rgba(179,181,198,1)',\n                    pointBorderColor: '#fff',\n                    pointHoverBackgroundColor: '#fff',\n                    pointHoverBorderColor: 'rgba(179,181,198,1)',\n                    data: [65, 59, 90, 81, 56, 55, 40]\n                },\n                {\n                    label: 'My Second dataset',\n                    backgroundColor: 'rgba(255,99,132,0.2)',\n                    borderColor: 'rgba(255,99,132,1)',\n                    pointBackgroundColor: 'rgba(255,99,132,1)',\n                    pointBorderColor: '#fff',\n                    pointHoverBackgroundColor: '#fff',\n                    pointHoverBorderColor: 'rgba(255,99,132,1)',\n                    data: [28, 48, 40, 19, 96, 27, 100]\n                }\n            ]\n        };\n\n        this.config = this.configService.config;\n        this.updateChartOptions();\n        this.subscription = this.configService.configUpdate$.subscribe(config => {\n            this.config = config;\n            this.updateChartOptions();\n        });\n    }\n\n    updateChartOptions() {\n        this.chartOptions = this.config && this.config.dark ? this.getDarkTheme() : this.getLightTheme();\n    }\n\n    getLightTheme() {\n        return {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    pointLabels: {\n                        color: '#495057',\n                    },\n                    grid: {\n                        color: '#ebedef',\n                    },\n                    angleLines: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        }\n    }\n\n    getDarkTheme() {\n        return {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    pointLabels: {\n                        color: '#ebedef',\n                    },\n                    grid: {\n                        color: 'rgba(255,255,255,0.2)',\n                    },\n                    angleLines: {\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                }\n            }\n        }\n    }\n}\n"),n.fQ9(),n.qZA()()()()),2&i&&(n.xp6(9),n.Akn(n.DdM(4,q)),n.Q6J("data",l.data)("options",l.chartOptions))},dependencies:[u.C,g.xf,g.x4,f.P,m.h],encapsulation:2}),a})(),s=(()=>{class a{constructor(i){this.configService=i}ngOnInit(){this.data={labels:["January","February","March","April","May","June","July"],datasets:[{type:"line",label:"Dataset 1",borderColor:"#42A5F5",borderWidth:2,fill:!1,data:[50,25,12,48,56,76,42]},{type:"bar",label:"Dataset 2",backgroundColor:"#66BB6A",data:[21,84,24,75,37,65,34],borderColor:"white",borderWidth:2},{type:"bar",label:"Dataset 3",backgroundColor:"#FFA726",data:[41,52,24,74,23,21,32]}]},this.chartOptions={plugins:{legend:{labels:{color:"#495057"}}},scales:{x:{ticks:{color:"#495057"},grid:{color:"#ebedef"}},y:{ticks:{color:"#495057"},grid:{color:"#ebedef"}}}},this.config=this.configService.config,this.updateChartOptions(),this.subscription=this.configService.configUpdate$.subscribe(i=>{this.config=i,this.updateChartOptions()})}updateChartOptions(){this.config.dark?this.applyDarkTheme():this.applyLightTheme()}applyLightTheme(){this.chartOptions={plugins:{legend:{labels:{color:"#495057"}}},scales:{x:{ticks:{color:"#495057"},grid:{color:"#ebedef"}},y:{ticks:{color:"#495057"},grid:{color:"#ebedef"}}}}}applyDarkTheme(){this.chartOptions={plugins:{legend:{labels:{color:"#ebedef"}}},scales:{x:{ticks:{color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"}},y:{ticks:{color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"}}}}}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}}return a.\u0275fac=function(i){return new(i||a)(n.Y36(h._))},a.\u0275cmp=n.Xpm({type:a,selectors:[["ng-component"]],decls:20,vars:2,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["github","chart/combochart"],[1,"content-section","implementation"],[1,"card"],["type","bar",3,"data","options"],[1,"content-section","documentation"],["header","Source"],["href","https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/chart/combochart","target","_blank",1,"btn-viewsource"],["lang","markup"],["lang","typescript"]],template:function(i,l){1&i&&(n.TgZ(0,"div",0)(1,"div",1)(2,"h1"),n._uU(3,"Combo Chart"),n.qZA(),n.TgZ(4,"p"),n._uU(5,"Different chart types can be combined in the same graph."),n.qZA()(),n._UZ(6,"app-demoActions",2),n.qZA(),n.TgZ(7,"div",3)(8,"div",4),n._UZ(9,"p-chart",5),n.qZA()(),n.TgZ(10,"div",6)(11,"p-tabView")(12,"p-tabPanel",7)(13,"a",8)(14,"span"),n._uU(15,"View on GitHub"),n.qZA()(),n.TgZ(16,"app-code",9),n.IAx(),n._uU(17,'\n<p-chart type="bar" [data]="data" [options]="chartOptions"></p-chart>\n'),n.fQ9(),n.qZA(),n.TgZ(18,"app-code",10),n.IAx(),n._uU(19,"\nexport class ComboChartDemo {\n\n    data: any;\n\n    chartOptions: any;\n\n    subscription: Subscription;\n\n    config: AppConfig;\n\n    constructor(private configService: AppConfigService) {}\n\n    ngOnInit() {\n        this.data = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [{\n                type: 'line',\n                label: 'Dataset 1',\n                borderColor: '#42A5F5',\n                borderWidth: 2,\n                fill: false,\n                data: [\n                    50,\n                    25,\n                    12,\n                    48,\n                    56,\n                    76,\n                    42\n                ]\n            }, {\n                type: 'bar',\n                label: 'Dataset 2',\n                backgroundColor: '#66BB6A',\n                data: [\n                    21,\n                    84,\n                    24,\n                    75,\n                    37,\n                    65,\n                    34\n                ],\n                borderColor: 'white',\n                borderWidth: 2\n            }, {\n                type: 'bar',\n                label: 'Dataset 3',\n                backgroundColor: '#FFA726',\n                data: [\n                    41,\n                    52,\n                    24,\n                    74,\n                    23,\n                    21,\n                    32\n                ]\n            }]\n        };\n\n        this.chartOptions =  {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        };\n\n        this.config = this.configService.config;\n        this.updateChartOptions();\n        this.subscription = this.configService.configUpdate$.subscribe(config => {\n            this.config = config;\n            this.updateChartOptions();\n        });\n    }\n\n    updateChartOptions() {\n        if (this.config.dark)\n            this.applyDarkTheme();\n        else\n            this.applyLightTheme();\n    }\n\n    applyLightTheme() {\n        this.chartOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        }\n    }\n\n    applyDarkTheme() {\n        this.chartOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(255,255,255,0.2)'\n                    }\n                }\n            }\n        };\n    }\n}\n"),n.fQ9(),n.qZA()()()()),2&i&&(n.xp6(9),n.Q6J("data",l.data)("options",l.chartOptions))},dependencies:[u.C,g.xf,g.x4,f.P,m.h],encapsulation:2}),a})(),b=(()=>{class a{}return a.\u0275fac=function(i){return new(i||a)},a.\u0275mod=n.oAB({type:a}),a.\u0275inj=n.cJS({imports:[p.Bz.forChild([{path:"",component:Z},{path:"pie",component:T},{path:"doughnut",component:O},{path:"bar",component:x},{path:"line",component:D},{path:"polararea",component:w},{path:"radar",component:S},{path:"combo",component:s}]),p.Bz]}),a})();var e=c(8523),o=c(7808),r=c(1508);let y=(()=>{class a{}return a.\u0275fac=function(i){return new(i||a)},a.\u0275mod=n.oAB({type:a}),a.\u0275inj=n.cJS({imports:[t.ez,b,e.S,o.EV,r.LU,f.L,m.a]}),a})()}}]);
"use strict";(self.webpackChunkprimeng=self.webpackChunkprimeng||[]).push([[4842],{7381:(U,c,a)=>{a.d(c,{a:()=>m,h:()=>_});var A=a(6895),n=a(1571);const g=["code"],t=["*"];let _=(()=>{class o{constructor(u){this.el=u,this.lang="markup"}ngAfterViewInit(){window.Prism&&window.Prism.highlightElement(this.codeViewChild.nativeElement)}}return o.\u0275fac=function(u){return new(u||o)(n.Y36(n.SBq))},o.\u0275cmp=n.Xpm({type:o,selectors:[["app-code"]],viewQuery:function(u,Z){if(1&u&&n.Gf(g,5),2&u){let T;n.iGM(T=n.CRH())&&(Z.codeViewChild=T.first)}},inputs:{lang:"lang",style:"style",styleClass:"styleClass"},ngContentSelectors:t,decls:5,vars:5,consts:[[3,"ngClass"],["code",""]],template:function(u,Z){1&u&&(n.F$t(),n.TgZ(0,"pre",0)(1,"code",null,1),n.Hsn(3),n._uU(4,"\n"),n.qZA()()),2&u&&(n.Akn(Z.style),n.Tol(Z.styleClass),n.Q6J("ngClass","language-"+Z.lang))},dependencies:[A.mk],encapsulation:2}),o})(),m=(()=>{class o{}return o.\u0275fac=function(u){return new(u||o)},o.\u0275mod=n.oAB({type:o}),o.\u0275inj=n.cJS({imports:[A.ez]}),o})()},4842:(U,c,a)=>{a.r(c),a.d(c,{InputMaskDemoModule:()=>v});var A=a(6895),n=a(433),g=a(9859),t=a(1571),_=a(3817),m=a(4619),o=a(485),s=a(3032),u=a(7381);function Z(e,p){1&e&&t._UZ(0,"iframe",25)}const T=function(){return["/inputtext"]},h=function(){return["/theming"]};let q=(()=>{class e{}return e.\u0275fac=function(i){return new(i||e)},e.\u0275cmp=t.Xpm({type:e,selectors:[["ng-component"]],decls:410,vars:10,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["github","inputmask","stackblitz","inputmask-demo"],[1,"content-section","implementation"],[1,"card"],[1,"grid","p-fluid"],[1,"col-12","md:col-6","lg:col-4"],["mask","99-999999","placeholder","99-999999",3,"ngModel","ngModelChange"],["mask","999-99-9999","placeholder","999-99-9999",3,"ngModel","ngModelChange"],["mask","99/99/9999","placeholder","99/99/9999","slotChar","mm/dd/yyyy",3,"ngModel","ngModelChange"],["mask","(999) 999-9999","placeholder","(999) 999-9999",3,"ngModel","ngModelChange"],["mask","(999) 999-9999? x99999","placeholder","(999) 999-9999? x99999",3,"ngModel","ngModelChange"],["mask","a*-999-a999","placeholder","a*-999-a999",3,"ngModel","ngModelChange"],[1,"content-section","documentation"],["header","Documentation"],["lang","typescript"],["lang","markup"],[1,"doc-tablewrapper"],[1,"doc-table"],["href","#",3,"routerLink"],["header","Source"],["href","https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/inputmask","target","_blank",1,"btn-viewsource"],["href","https://stackblitz.com/edit/primeng-inputmask-demo","target","_blank",1,"btn-viewsource",2,"margin-left",".5em"],["header","StackBlitz"],["pTemplate","content"],["src","https://stackblitz.com/edit/primeng-inputmask-demo?embed=1",2,"width","100%","height","768px","border","none"]],template:function(i,l){1&i&&(t.TgZ(0,"div",0)(1,"div",1)(2,"h1"),t._uU(3,"InputMask"),t.qZA(),t.TgZ(4,"p"),t._uU(5,"InputMask component is used to enter input in a certain format such as numeric, date, currency and phone."),t.qZA()(),t._UZ(6,"app-demoActions",2),t.qZA(),t.TgZ(7,"div",3)(8,"div",4)(9,"div",5)(10,"div",6)(11,"span"),t._uU(12,"Basic"),t.qZA(),t.TgZ(13,"p-inputMask",7),t.NdJ("ngModelChange",function(d){return l.val1=d}),t.qZA()(),t.TgZ(14,"div",6)(15,"span"),t._uU(16,"SSN"),t.qZA(),t.TgZ(17,"p-inputMask",8),t.NdJ("ngModelChange",function(d){return l.val2=d}),t.qZA()(),t.TgZ(18,"div",6)(19,"span"),t._uU(20,"Date"),t.qZA(),t.TgZ(21,"p-inputMask",9),t.NdJ("ngModelChange",function(d){return l.val3=d}),t.qZA()(),t.TgZ(22,"div",6)(23,"span"),t._uU(24,"Phone"),t.qZA(),t.TgZ(25,"p-inputMask",10),t.NdJ("ngModelChange",function(d){return l.val4=d}),t.qZA()(),t.TgZ(26,"div",6)(27,"span"),t._uU(28,"Phone Ext"),t.qZA(),t.TgZ(29,"p-inputMask",11),t.NdJ("ngModelChange",function(d){return l.val5=d}),t.qZA()(),t.TgZ(30,"div",6)(31,"span"),t._uU(32,"Serial Number"),t.qZA(),t.TgZ(33,"p-inputMask",12),t.NdJ("ngModelChange",function(d){return l.val6=d}),t.qZA()()()()(),t.TgZ(34,"div",13)(35,"p-tabView")(36,"p-tabPanel",14)(37,"h5"),t._uU(38,"Import"),t.qZA(),t.TgZ(39,"app-code",15),t.IAx(),t._uU(40,"\nimport {InputMaskModule} from 'primeng/inputmask';\n"),t.fQ9(),t.qZA(),t.TgZ(41,"h5"),t._uU(42,"Getting Started"),t.qZA(),t.TgZ(43,"p"),t._uU(44,"Component is defined using p-inputMask element with a mask and two-way value binding is enabled with standard ngModel directive."),t.qZA(),t.TgZ(45,"app-code",16),t.IAx(),t._uU(46,'\n<p-inputMask [(ngModel)]="val" mask="99-9999"></p-inputMask>\n'),t.fQ9(),t.qZA(),t.TgZ(47,"h5"),t._uU(48,"Mask"),t.qZA(),t.TgZ(49,"p"),t._uU(50,"Mask format can be a combination of the the following built-in definitions."),t.qZA(),t.TgZ(51,"ul")(52,"li"),t._uU(53,"a - Alpha character (defaut: A-Z,a-z)"),t.qZA(),t.TgZ(54,"li"),t._uU(55,"9 - Numeric character (0-9)"),t.qZA(),t.TgZ(56,"li"),t._uU(57,"* - Alpha numberic character (A-Z,a-z,0-9)"),t.qZA()(),t.TgZ(58,"app-code",16),t.IAx(),t._uU(59,'\n<p-inputMask [(ngModel)]="val" mask="a*-999-a999"></p-inputMask>\n'),t.fQ9(),t.qZA(),t.TgZ(60,"p"),t._uU(61,"You can also define your own regex pattern for alpha character"),t.qZA(),t.TgZ(62,"app-code",16),t.IAx(),t._uU(63,'\n<p-inputMask [(ngModel)]="val" mask="99-aa" characterPattern="[\u0410-\u042f\u0430-\u044f]"></p-inputMask>\n'),t.fQ9(),t.qZA(),t.TgZ(64,"h5"),t._uU(65,"SlotChar"),t.qZA(),t.TgZ(66,"p"),t._uU(67,"Underscore is the default placeholder for a mask and this can be customized using "),t.TgZ(68,"i"),t._uU(69,"slotChart"),t.qZA(),t._uU(70," option."),t.qZA(),t.TgZ(71,"app-code",16),t.IAx(),t._uU(72,'\n<p-inputMask [(ngModel)]="val" mask="99-9999" slotChar=" "></p-inputMask>\n'),t.fQ9(),t.qZA(),t.TgZ(73,"h5"),t._uU(74,"Optional Values"),t.qZA(),t.TgZ(75,"p"),t._uU(76,"If the input does not complete the mask definition, it is cleared by default. Use "),t.TgZ(77,"i"),t._uU(78,"autoClear"),t.qZA(),t._uU(79," property to control this behavior. In addition, certain part of a mask can be made optional by using ? symbol where anything after the question mark becomes optional."),t.qZA(),t.TgZ(80,"h5"),t._uU(81,"Model Driven Forms"),t.qZA(),t.TgZ(82,"p"),t._uU(83,"InputMask can be used in a model driven form as well."),t.qZA(),t.TgZ(84,"app-code",16),t.IAx(),t._uU(85,'\n<p-inputMask formControlName="username" mask="(999) 999-9999? x99999"></p-inputMask>\n'),t.fQ9(),t.qZA(),t.TgZ(86,"h5"),t._uU(87,"Properties"),t.qZA(),t.TgZ(88,"div",17)(89,"table",18)(90,"thead")(91,"tr")(92,"th"),t._uU(93,"Name"),t.qZA(),t.TgZ(94,"th"),t._uU(95,"Type"),t.qZA(),t.TgZ(96,"th"),t._uU(97,"Default"),t.qZA(),t.TgZ(98,"th"),t._uU(99,"Description"),t.qZA()()(),t.TgZ(100,"tbody")(101,"tr")(102,"td"),t._uU(103,"type"),t.qZA(),t.TgZ(104,"td"),t._uU(105,"string"),t.qZA(),t.TgZ(106,"td"),t._uU(107,"text"),t.qZA(),t.TgZ(108,"td"),t._uU(109,"HTML5 input type"),t.qZA()(),t.TgZ(110,"tr")(111,"td"),t._uU(112,"mask"),t.qZA(),t.TgZ(113,"td"),t._uU(114,"string"),t.qZA(),t.TgZ(115,"td"),t._uU(116,"null"),t.qZA(),t.TgZ(117,"td"),t._uU(118,"Mask pattern."),t.qZA()(),t.TgZ(119,"tr")(120,"td"),t._uU(121,"slotChar"),t.qZA(),t.TgZ(122,"td"),t._uU(123,"string"),t.qZA(),t.TgZ(124,"td"),t._uU(125,"_"),t.qZA(),t.TgZ(126,"td"),t._uU(127,"Placeholder character in mask, default is underscore."),t.qZA()(),t.TgZ(128,"tr")(129,"td"),t._uU(130,"autoClear"),t.qZA(),t.TgZ(131,"td"),t._uU(132,"boolean"),t.qZA(),t.TgZ(133,"td"),t._uU(134,"true"),t.qZA(),t.TgZ(135,"td"),t._uU(136,"Clears the incomplete value on blur."),t.qZA()(),t.TgZ(137,"tr")(138,"td"),t._uU(139,"unmask"),t.qZA(),t.TgZ(140,"td"),t._uU(141,"boolean"),t.qZA(),t.TgZ(142,"td"),t._uU(143,"false"),t.qZA(),t.TgZ(144,"td"),t._uU(145,"Defines if ngModel sets the raw unmasked value to bound value or the formatted mask value."),t.qZA()(),t.TgZ(146,"tr")(147,"td"),t._uU(148,"style"),t.qZA(),t.TgZ(149,"td"),t._uU(150,"string"),t.qZA(),t.TgZ(151,"td"),t._uU(152,"null"),t.qZA(),t.TgZ(153,"td"),t._uU(154,"Inline style of the input field."),t.qZA()(),t.TgZ(155,"tr")(156,"td"),t._uU(157,"styleClass"),t.qZA(),t.TgZ(158,"td"),t._uU(159,"string"),t.qZA(),t.TgZ(160,"td"),t._uU(161,"null"),t.qZA(),t.TgZ(162,"td"),t._uU(163,"Style class of the input field."),t.qZA()(),t.TgZ(164,"tr")(165,"td"),t._uU(166,"placeholder"),t.qZA(),t.TgZ(167,"td"),t._uU(168,"string"),t.qZA(),t.TgZ(169,"td"),t._uU(170,"null"),t.qZA(),t.TgZ(171,"td"),t._uU(172,"Advisory information to display on input."),t.qZA()(),t.TgZ(173,"tr")(174,"td"),t._uU(175,"size"),t.qZA(),t.TgZ(176,"td"),t._uU(177,"number"),t.qZA(),t.TgZ(178,"td"),t._uU(179,"null"),t.qZA(),t.TgZ(180,"td"),t._uU(181,"Size of the input field."),t.qZA()(),t.TgZ(182,"tr")(183,"td"),t._uU(184,"maxlength"),t.qZA(),t.TgZ(185,"td"),t._uU(186,"number"),t.qZA(),t.TgZ(187,"td"),t._uU(188,"null"),t.qZA(),t.TgZ(189,"td"),t._uU(190,"Maximum number of character allows in the input field."),t.qZA()(),t.TgZ(191,"tr")(192,"td"),t._uU(193,"tabindex"),t.qZA(),t.TgZ(194,"td"),t._uU(195,"number"),t.qZA(),t.TgZ(196,"td"),t._uU(197,"null"),t.qZA(),t.TgZ(198,"td"),t._uU(199,"Specifies tab order of the element."),t.qZA()(),t.TgZ(200,"tr")(201,"td"),t._uU(202,"disabled"),t.qZA(),t.TgZ(203,"td"),t._uU(204,"boolean"),t.qZA(),t.TgZ(205,"td"),t._uU(206,"false"),t.qZA(),t.TgZ(207,"td"),t._uU(208,"When present, it specifies that the element value cannot be altered."),t.qZA()(),t.TgZ(209,"tr")(210,"td"),t._uU(211,"readonly"),t.qZA(),t.TgZ(212,"td"),t._uU(213,"boolean"),t.qZA(),t.TgZ(214,"td"),t._uU(215,"false"),t.qZA(),t.TgZ(216,"td"),t._uU(217,"When present, it specifies that an input field is read-only."),t.qZA()(),t.TgZ(218,"tr")(219,"td"),t._uU(220,"name"),t.qZA(),t.TgZ(221,"td"),t._uU(222,"string"),t.qZA(),t.TgZ(223,"td"),t._uU(224,"null"),t.qZA(),t.TgZ(225,"td"),t._uU(226,"Name of the input field."),t.qZA()(),t.TgZ(227,"tr")(228,"td"),t._uU(229,"inputId"),t.qZA(),t.TgZ(230,"td"),t._uU(231,"string"),t.qZA(),t.TgZ(232,"td"),t._uU(233,"null"),t.qZA(),t.TgZ(234,"td"),t._uU(235,"Identifier of the focus input to match a label defined for the component."),t.qZA()(),t.TgZ(236,"tr")(237,"td"),t._uU(238,"required"),t.qZA(),t.TgZ(239,"td"),t._uU(240,"boolean"),t.qZA(),t.TgZ(241,"td"),t._uU(242,"false"),t.qZA(),t.TgZ(243,"td"),t._uU(244,"When present, it specifies that an input field must be filled out before submitting the form."),t.qZA()(),t.TgZ(245,"tr")(246,"td"),t._uU(247,"characterPattern"),t.qZA(),t.TgZ(248,"td"),t._uU(249,"string"),t.qZA(),t.TgZ(250,"td"),t._uU(251,"[A-Za-z]"),t.qZA(),t.TgZ(252,"td"),t._uU(253,"Regex pattern for alpha characters"),t.qZA()(),t.TgZ(254,"tr")(255,"td"),t._uU(256,"autoFocus"),t.qZA(),t.TgZ(257,"td"),t._uU(258,"boolean"),t.qZA(),t.TgZ(259,"td"),t._uU(260,"false"),t.qZA(),t.TgZ(261,"td"),t._uU(262,"When present, the input gets a focus automatically on load."),t.qZA()(),t.TgZ(263,"tr")(264,"td"),t._uU(265,"showClear"),t.qZA(),t.TgZ(266,"td"),t._uU(267,"boolean"),t.qZA(),t.TgZ(268,"td"),t._uU(269,"false"),t.qZA(),t.TgZ(270,"td"),t._uU(271,"When enabled, a clear icon is displayed to clear the value."),t.qZA()(),t.TgZ(272,"tr")(273,"td"),t._uU(274,"autocomplete"),t.qZA(),t.TgZ(275,"td"),t._uU(276,"string"),t.qZA(),t.TgZ(277,"td"),t._uU(278,"null"),t.qZA(),t.TgZ(279,"td"),t._uU(280,"Used to define a string that autocomplete attribute the current element."),t.qZA()(),t.TgZ(281,"tr")(282,"td"),t._uU(283,"ariaLabel"),t.qZA(),t.TgZ(284,"td"),t._uU(285,"string"),t.qZA(),t.TgZ(286,"td"),t._uU(287,"null"),t.qZA(),t.TgZ(288,"td"),t._uU(289,"Used to define a string that labels the input element."),t.qZA()(),t.TgZ(290,"tr")(291,"td"),t._uU(292,"ariaRequired"),t.qZA(),t.TgZ(293,"td"),t._uU(294,"boolean"),t.qZA(),t.TgZ(295,"td"),t._uU(296,"false"),t.qZA(),t.TgZ(297,"td"),t._uU(298,"Used to indicate that user input is required on an element before a form can be submitted."),t.qZA()(),t.TgZ(299,"tr")(300,"td"),t._uU(301,"title"),t.qZA(),t.TgZ(302,"td"),t._uU(303,"string"),t.qZA(),t.TgZ(304,"td"),t._uU(305,"null"),t.qZA(),t.TgZ(306,"td"),t._uU(307,"Title text of the input text."),t.qZA()()()()(),t.TgZ(308,"h5"),t._uU(309,"Events"),t.qZA(),t.TgZ(310,"div",17)(311,"table",18)(312,"thead")(313,"tr")(314,"th"),t._uU(315,"Name"),t.qZA(),t.TgZ(316,"th"),t._uU(317,"Parameters"),t.qZA(),t.TgZ(318,"th"),t._uU(319,"Description"),t.qZA()()(),t.TgZ(320,"tbody")(321,"tr")(322,"td"),t._uU(323,"onFocus"),t.qZA(),t.TgZ(324,"td"),t._uU(325,"event: Browser event"),t.qZA(),t.TgZ(326,"td"),t._uU(327,"Callback to invoke when input receives focus."),t.qZA()(),t.TgZ(328,"tr")(329,"td"),t._uU(330,"onBlur"),t.qZA(),t.TgZ(331,"td"),t._uU(332,"event: Browser event"),t.qZA(),t.TgZ(333,"td"),t._uU(334,"Callback to invoke when input loses focus."),t.qZA()(),t.TgZ(335,"tr")(336,"td"),t._uU(337,"onComplete"),t.qZA(),t.TgZ(338,"td"),t._uU(339,"-"),t.qZA(),t.TgZ(340,"td"),t._uU(341,"Callback to invoke on when user completes the mask pattern."),t.qZA()(),t.TgZ(342,"tr")(343,"td"),t._uU(344,"onInput"),t.qZA(),t.TgZ(345,"td"),t._uU(346,"-"),t.qZA(),t.TgZ(347,"td"),t._uU(348,"Callback to invoke on when the input field value is altered."),t.qZA()(),t.TgZ(349,"tr")(350,"td"),t._uU(351,"onClear"),t.qZA(),t.TgZ(352,"td"),t._uU(353,"-"),t.qZA(),t.TgZ(354,"td"),t._uU(355,"Callback to invoke when inputmask clears the value."),t.qZA()(),t.TgZ(356,"tr")(357,"td"),t._uU(358,"onKeydown"),t.qZA(),t.TgZ(359,"td"),t._uU(360,"event: KeyboardEvent"),t.qZA(),t.TgZ(361,"td"),t._uU(362,"Callback to invoke on when the input receives a keydown event."),t.qZA()()()()(),t.TgZ(363,"h5"),t._uU(364,"Methods"),t.qZA(),t.TgZ(365,"div",17)(366,"table",18)(367,"thead")(368,"tr")(369,"th"),t._uU(370,"Name"),t.qZA(),t.TgZ(371,"th"),t._uU(372,"Parameters"),t.qZA(),t.TgZ(373,"th"),t._uU(374,"Description"),t.qZA()()(),t.TgZ(375,"tbody")(376,"tr")(377,"td"),t._uU(378,"focus"),t.qZA(),t.TgZ(379,"td"),t._uU(380,"-"),t.qZA(),t.TgZ(381,"td"),t._uU(382,"Applies focus to the input."),t.qZA()()()()(),t.TgZ(383,"h5"),t._uU(384,"Styling"),t.qZA(),t.TgZ(385,"p"),t._uU(386,"Styling is same as "),t.TgZ(387,"a",19),t._uU(388,"inputtext component"),t.qZA(),t._uU(389,", for theming classes visit "),t.TgZ(390,"a",19),t._uU(391,"theming page"),t.qZA(),t._uU(392,"."),t.qZA(),t.TgZ(393,"h5"),t._uU(394,"Dependencies"),t.qZA(),t.TgZ(395,"p"),t._uU(396,"None."),t.qZA()(),t.TgZ(397,"p-tabPanel",20)(398,"a",21)(399,"span"),t._uU(400,"View on GitHub"),t.qZA()(),t.TgZ(401,"a",22)(402,"span"),t._uU(403,"Edit in StackBlitz"),t.qZA()(),t.TgZ(404,"app-code",16),t.IAx(),t._uU(405,'\n<div class="grid p-fluid">\n    <div class="col-12 md:col-6 lg:col-4">\n        <span>Basic</span>\n        <p-inputMask mask="99-999999" [(ngModel)]="val1" placeholder="99-999999"></p-inputMask>\n    </div>\n    \n    <div class="col-12 md:col-6 lg:col-4">\n        <span>SSN</span>\n        <p-inputMask mask="999-99-9999" [(ngModel)]="val2" placeholder="999-99-9999"></p-inputMask>\n    </div>\n    \n    <div class="col-12 md:col-6 lg:col-4">\n        <span>Date</span>\n        <p-inputMask mask="99/99/9999" [(ngModel)]="val3" placeholder="99/99/9999" slotChar="mm/dd/yyyy"></p-inputMask>\n    </div>\n    \n    <div class="col-12 md:col-6 lg:col-4">\n        <span>Phone</span>\n        <p-inputMask mask="(999) 999-9999" [(ngModel)]="val4" placeholder="(999) 999-9999"></p-inputMask>\n    </div>\n    \n    <div class="col-12 md:col-6 lg:col-4">\n        <span>Phone Ext</span>\n        <p-inputMask mask="(999) 999-9999? x99999" [(ngModel)]="val5" placeholder="(999) 999-9999? x99999"></p-inputMask>\n    </div>\n    \n    <div class="col-12 md:col-6 lg:col-4">\n        <span>Serial Number</span>\n        <p-inputMask mask="a*-999-a999" [(ngModel)]="val6" placeholder="a*-999-a999"></p-inputMask>\n    </div>\n</div>\n'),t.fQ9(),t.qZA(),t.TgZ(406,"app-code",15),t.IAx(),t._uU(407,"\nexport class InputMaskDemo {\n\n    val1: string;\n\n    val2: string;\n\n    val3: string;\n\n    val4: string;\n\n    val5: string;\n    \n    val6: string;\n    \n}\n"),t.fQ9(),t.qZA()(),t.TgZ(408,"p-tabPanel",23),t.YNc(409,Z,1,0,"ng-template",24),t.qZA()()()),2&i&&(t.xp6(13),t.Q6J("ngModel",l.val1),t.xp6(4),t.Q6J("ngModel",l.val2),t.xp6(4),t.Q6J("ngModel",l.val3),t.xp6(4),t.Q6J("ngModel",l.val4),t.xp6(4),t.Q6J("ngModel",l.val5),t.xp6(4),t.Q6J("ngModel",l.val6),t.xp6(354),t.Q6J("routerLink",t.DdM(8,T)),t.xp6(3),t.Q6J("routerLink",t.DdM(9,h)))},dependencies:[n.JJ,n.On,g.yS,_.vy,m.xf,m.x4,o.jx,s.P,u.h],styles:[".col-12[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{display:block;margin-bottom:.5em}"]}),e})(),M=(()=>{class e{}return e.\u0275fac=function(i){return new(i||e)},e.\u0275mod=t.oAB({type:e}),e.\u0275inj=t.cJS({imports:[g.Bz.forChild([{path:"",component:q}]),g.Bz]}),e})();var f=a(5092),k=a(1508);let v=(()=>{class e{}return e.\u0275fac=function(i){return new(i||e)},e.\u0275mod=t.oAB({type:e}),e.\u0275inj=t.cJS({imports:[A.ez,n.u5,M,f.zz,k.LU,s.L,u.a]}),e})()}}]);